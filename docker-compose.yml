version: '2'

services:
  backup_app:
    image: local/backup_app
    build:
      context: backup_app
      dockerfile: Dockerfile
    depends_on:
      - backup_app_postgres
      - mosquitto
    logging:
      driver: journald
      options:
        mode: non-blocking
        max-buffer-size: 1m

  backup_app_postgres:
    image: local/backup_app_postgres
    build:
      context: backup_app
      dockerfile: Dockerfile-postgres
    volumes:
      - backup_app_postgres_data:/data
      - backup_app_postgres_sql_data:/var/lib/postgresql/data
    logging:
      driver: journald
      options:
        mode: non-blocking
        max-buffer-size: 1m

  lora-app-server:
    image: local/lora-app-server
    build:
      context:    ../brocaar/lora-app-server
      dockerfile: Dockerfile
    ports:
      # application_server.external_api
      - 8081:8080
    volumes:
      - ./lora-app-server_conf.toml:/etc/lora-app-server/lora-app-server.toml:ro
    depends_on:
      - postgres-appsrv
      - redis
      - mosquitto
      - loraserver
    logging:
      driver: journald
      options:
        mode: non-blocking
        max-buffer-size: 1m

  loraserver:
    image: local/loraserver
    build:
      context:    ../brocaar/loraserver
      dockerfile: Dockerfile
    volumes:
      - ./loraserver_conf.toml:/etc/loraserver/loraserver.toml:ro
    depends_on:
      - postgres
      - redis
      - mosquitto
    logging:
      driver: journald
      options:
        mode: non-blocking
        max-buffer-size: 1m

  bridge:
    image: local/lora-gateway-bridge
    build:
      context:    ../brocaar/lora-gateway-bridge
      dockerfile: Dockerfile
    volumes:
      - ./lora-gateway-bridge_conf.toml:/etc/lora-gateway-bridge/lora-gateway-bridge.toml
    depends_on:
      - mosquitto
    logging:
      driver: journald
      options:
        mode: non-blocking
        max-buffer-size: 1m

  packet-forwarder:
    image: registry.int.sky-watch.com:5000/3rdpart/ttn-packet-forwarder:rpi
    build:
      context: packet-forwarder
      dockerfile: Dockerfile
    volumes:
      - forwarder_cgroups:/sys/fs/cgroup
    environment:
      PI_RESET_PIN: 7
      GATEWAY_EUI: "0000000000010203"
      ROUTER_ADDR: bridge
      GATEWAY_NAME: "forwarder"
    privileged: true
    depends_on:
      - bridge
    logging:
      driver: journald
      options:
        mode: non-blocking
        max-buffer-size: 1m

  redis:
    image: local/rpi-redis:4.0-alpine
    build:
      context: images/redis/4.0/alpine
      dockerfile: Dockerfile
    volumes:
      - redis_data:/data
    logging:
      driver: journald
      options:
        mode: non-blocking
        max-buffer-size: 1m

  mosquitto:
    image: fstehle/rpi-mosquitto
    ports:
      - "1883:1883"  # Note: your MQTT broker should use authentication in production environments
    logging:
      driver: journald
      options:
        mode: non-blocking
        max-buffer-size: 1m

  postgres-appsrv:
    image: postgres:9.6-alpine
    volumes:
      - postgres-appsrv_data:/data
      - postgres-appsrv_sql_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=loraserver_as
      - POSTGRES_USER=loraserver_as
      - POSTGRES_DB=loraserver_as
    logging:
      driver: journald
      options:
        mode: non-blocking
        max-buffer-size: 1m

  postgres:
    image: postgres:9.6-alpine
    volumes:
      - postgres_data:/data
      - postgres_sql_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=loraserver
      - POSTGRES_USER=loraserver
      - POSTGRES_DB=loraserver
    logging:
      driver: journald
      options:
        mode: non-blocking
        max-buffer-size: 1m

volumes:
  postgres_data:
  postgres_sql_data:
  postgres-appsrv_data:
  postgres-appsrv_sql_data:
  backup_app_postgres_data:
  backup_app_postgres_sql_data:
  redis_data:
  forwarder_cgroups:
